print("Validating Advance Functionality");

fun division(mid: Int) -> Int {
  var idx: Int = 0;
  while (mid >= idx) {
    var duplicate: Int = idx + 1;
    idx = duplicate * 2;
  }
  return idx - 1;
}

fun binarySearch(array: [Int], arrayLength: Int, element: Int) -> Int {
  var low: Int = 0;
  var high: Int = arrayLength - 1;
  while (low <= high) {
    var mid: Int = division(low + high);
    if (array[mid] < element) {
      var duplicate: Int = mid + 1;
      low = duplicate;
    } else if (array[mid] > element) {
      var duplicate: Int = mid - 1;
      high = duplicate;
    } else {
      return mid + 1;
    }
  }
  return -1;
}

var arr: [Int] = [2, 3, 4, 10, 40];
var x: Int = 10;

var result: Int = binarySearch(arr, 5, x);
 
if (result != -1) {
    print("Element is present at index");
    print(result);
} else {
    print("Element is not present in array");
}

arr = [-839, -32, -1, 0, 1, 92, 382, 2983, 8932327];

var result1: Int = binarySearch(arr, 9, 382);
 
if (result1 != -1) {
    print("Element is present at index");
    print(result1);
} else {
    print("Element is not present in array");
}

var result2: Int = binarySearch(arr, 9, -38);
 
if (result2 != -1) {
    print("Element is present at index");
    print(result2);
} else {
    print("Element is not present in array");
}
